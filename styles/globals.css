:root {
  /* ライトモードの基本色を定義 (これが強制的に使われる色になる) */
  --game-background: #ffffff;
  --game-foreground: #171717;
  --game-primary-color: #007bff;
  --game-secondary-color: #6c757d;
  --game-card-background: #ffffff;
  --game-card-border: #eaeaea;
  --game-button-background: var(--game-primary-color);
  --game-button-text: white;
  --game-button-hover-background: #0056b3;
  --game-modal-background: #ffffff;
  --game-modal-text: #171717;
  --game-modal-header-background: #f8f9fa;
  --game-input-background: #ffffff;
  --game-input-border: #ced4da;
  --game-input-text: #495057;

  /* color-scheme はブラウザのUI部品 (スクロールバー等) のために残しておいても良いが、
     ゲーム本体の色はCSSで完全に制御するため、影響は限定的になる */
  color-scheme: light dark;
}

/*
  ダークモード時でも、以下の :root 変数はライトモードの値が使われることになる。
  もしブラウザのデフォルトUI（スクロールバーなど）だけダークモードに追従させたい場合は、
  この @media ブロック内の :root の再定義は不要。
  ゲーム本体の色は、後述の個別要素へのスタイル指定で強制する。
*/
/* @media (prefers-color-scheme: dark) {
  :root {
    // --background: #0a0a0a; // 通常のダークモード対応ならこうするが、今回は強制ライトなのでコメントアウト
    // --foreground: #ededed;
  }
} */

html,
body {
  max-width: 100vw;
  overflow-x: hidden;
}

body {
  /* body自体はブラウザのダークモード設定に追従させても良いし、
     ゲームに合わせてライトモード固定にしても良い。
     ここではゲームに合わせてライトモード固定にする。 */
  color: var(--game-foreground);
  background: var(--game-background);
  font-family: Arial, Helvetica, sans-serif; /* プロジェクトのフォントに合わせてください */
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}

* {
  box-sizing: border-box;
  padding: 0;
  margin: 0;
}

a {
  color: inherit; /* 基本的に親要素の色を継承 */
  text-decoration: none;
}

/* --- ダークモード設定時でも、ゲームの主要要素はライトモードの配色を強制 --- */
@media (prefers-color-scheme: dark) {
  /*
    ゲームのメインコンテナ (例: pages/game.js の一番外側の div)。
    この要素に特定のIDやクラスを付与して指定するのが望ましい。
    ここでは仮にインラインスタイルで `backgroundColor: 'white'` が設定されていると想定し、
    それを維持、またはより明示的にライトモードの色を指定する。
    もし body 全体をライトモード固定にしたければ、ここの指定は不要になる場合もある。
  */
  /* div[style*="maxWidth: '900px'"][style*="margin: 'auto'"] { // game.js のメインコンテナを仮特定
    background-color: var(--game-background) !important;
    color: var(--game-foreground) !important;
  } */

  /* 各UIコンポーネントのルート要素や、色が重要な要素に対して、
     ライトモードのCSS変数を !important 付きで適用する */

  /* PlayerStatusDisplay, MentorInfoDisplay などの情報表示エリア */
  div[style*="border: 1px solid #eee"],
  div[style*="border: 1px solid #e0e0e0"] {
    background-color: var(--game-card-background) !important; /* 白背景を維持 */
    color: var(--game-foreground) !important; /* 黒文字を維持 */
    border-color: var(--game-card-border) !important; /* 明るい境界線を維持 */
  }

  /* IkuseiPhaseUI, ShikenPhaseUI, ItemUsePhaseUI のような主要コンテナの境界線 */
  div[style*="border: 1px solid lightblue"],
  div[style*="border: 1px solid salmon"],
  div[style*="border: 1px solid green"] {
    border-color: #add8e6 !important; /* lightblue を維持 (または var(--game-card-border) など) */
    /* 背景や文字は親要素(bodyやメインコンテナ)から継承される想定 */
  }
  div[style*="border: 1px solid salmon"] {
    border-color: #fa8072 !important; /* salmon を維持 */
  }
   div[style*="border: 1px solid green"] {
    border-color: #008000 !important; /* green を維持 */
  }


  /* ボタン全般 (汎用的な指定 - クラス指定が望ましい) */
  button {
    background-color: var(--game-button-background) !important;
    color: var(--game-button-text) !important;
    border: 1px solid var(--game-card-border) !important; /* ボタンの境界線 */
  }
  button:hover {
    background-color: var(--game-button-hover-background) !important;
  }
  /* 特定の色のボタンがあれば個別に指定 */
  button[style*="backgroundColor: '#28a745'"] { /* 緑色の「はい」ボタン */
      background-color: #28a745 !important;
      color: white !important;
  }
  button[style*="backgroundColor: '#dc3545'"] { /* 赤色の「いいえ」ボタン */
      background-color: #dc3545 !important;
      color: white !important;
  }
   button[style*="backgroundColor: 'blue'"] { /* 青色の「カードを使用する」ボタン */
      background-color: blue !important;
      color: white !important;
  }
  button[style*="backgroundColor: 'teal'"] { /* ティール色の「次へ」ボタン */
      background-color: teal !important;
      color: white !important;
  }
  button[style*="backgroundColor: 'orange'"] { /* オレンジ色のボタン */
    background-color: orange !important;
    color: white !important;
  }


  /* ShikenPhaseUI などの結果表示の背景 */
  div[style*="border: 1px solid #eee"][style*="white-space: pre-wrap"] {
    background-color: var(--game-card-background) !important; /* 明るい背景 */
    border-color: var(--game-card-border) !important; /* 明るい境界線 */
    color: var(--game-foreground) !important; /* 暗い文字 */
  }

  /* DeckViewerModal のスタイル */
  div[style*="backgroundColor: 'rgba(0, 0, 0, 0.5)"][style*="zIndex: 2005"] > div[style*="backgroundColor: 'white'"] { /* モーダル本体 */
    background-color: var(--game-modal-background) !important;
    color: var(--game-modal-text) !important;
  }
  div[style*="zIndex: 2005"] h3 { /* モーダルタイトル */
    color: var(--game-modal-text) !important;
  }
  div[style*="zIndex: 2005"] button[style*="fontSize: '1.5rem'"] { /* モーダル閉じるボタン */
     color: var(--game-modal-text) !important;
  }
  div[style*="zIndex: 2005"] div[style*="borderBottom: '1px solid #eee'"] { /* タブ区切り線 */
    border-bottom-color: var(--game-card-border) !important;
  }
  /* モーダル内のタブボタン (DeckViewerModal.js側でCSS変数を参照するのがより良い) */
  div[style*="zIndex: 2005"] button[style*="backgroundColor: '#007bff'"] { /* アクティブタブ */
    background-color: var(--game-primary-color) !important;
    color: var(--game-button-text) !important;
  }
  div[style*="zIndex: 2005"] button[style*="backgroundColor: '#f0f0f0'"] { /* 非アクティブタブ */
    background-color: #f0f0f0 !important; /* ライトモードの非アクティブ色 */
    color: black !important;
    border-color: #ccc !important;
  }
  /* モーダル内のカード表示 */
  div[style*="zIndex: 2005"] div[style*="border: '1px solid #ddd'"] {
      background-color: var(--game-card-background) !important;
      border-color: var(--game-card-border) !important;
      color: var(--game-foreground) !important;
  }
   div[style*="zIndex: 2005"] div[style*="backgroundColor: '#f9f9f9'"] { /* 初期カードなど */
      background-color: #f9f9f9 !important;
      border-color: var(--game-card-border) !important;
      color: var(--game-foreground) !important;
  }


  /* ホバーツールチップ (DeckViewerModal内) */
  div[style*="backgroundColor: 'rgba(0, 0, 0, 0.85)'"][style*="zIndex: 2010"] {
      background-color: rgba(250, 250, 250, 0.95) !important; /* 明るい背景 */
      color: #171717 !important; /* 暗い文字 */
      border: 1px solid #ccc !important;
      box-shadow: 0 2px 10px rgba(0,0,0,0.2) !important;
  }
  div[style*="zIndex: 2010"] > h4 {
      color: #171717 !important;
      border-bottom-color: #ddd !important;
  }


  /* ExaminerDisplay */
  div[style*="textAlign: 'center'"][style*="minWidth: '150px'"] { /* ExaminerDisplayのコンテナを仮特定 */
    background-color: var(--game-card-background) !important;
    border-color: var(--game-card-border) !important; /* 通常時の境界線 */
    color: var(--game-foreground) !important;
  }
  /* ExaminerDisplay 選択時 (style属性で動的に変わる部分) */
  /* JavaScript側でクラスを付与してCSSで制御する方が望ましい */
  /* 例: isSelected ? 'examiner-selected' : '' のようにクラスを付与 */
  /* .examiner-selected {
      border-color: var(--game-primary-color) !important;
      background-color: #e0f7fa !important; /* ライトモードでの選択色
  } */


  /* タイトルへ戻るボタン */
  a[style*="backgroundColor: '#f0f0f0'"] {
      background-color: #f0f0f0 !important; /* ライトモードの色を維持 */
      color: black !important;
      border-color: #ccc !important;
  }
}